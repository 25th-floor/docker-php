#!/bin/bash
set -e

versions=( "$@" )
if [ ${#versions[@]} -eq 0 ]; then
	versions=( */ )
fi
versions=( "${versions[@]%/}" )

ppas=(
	[54]='php5-oldstable'
	[55]='php5'
	[56]='php5-5.6'
	[70]='php-7.0'
)

for version in "${versions[@]}"; do
	versionShort=`echo $version | tr -d '.'`
	majorVersion=`echo $version | sed 's/^\([[:digit:]]*\).*$/\1/'`

	file="${version}/Dockerfile"

	echo "Generating ${file}"

	ppa=${ppas[$versionShort]}
	package="php${majorVersion}-fpm"
	binary="php${majorVersion}-fpm"
	config="/etc/php${majorVersion}/fpm/php-fpm.conf"

	if [[ ${majorVersion} == "7" ]]; then
		package="php7.0-fpm"
		binary="php-fpm7.0"
		config='/etc/php/7.0/fpm/php-fpm.conf'
	fi

	printf "# Beware: This file is generated by the generate.sh script!\n" > ${file}

	printf "FROM ubuntu:14.04\nMAINTAINER Martin Prebio <mp@25th-floor.com>\nEXPOSE 9000\n" >> ${file}
	printf "ENV DEBIAN_FRONTEND noninteractive\n\n" >> ${file}
	printf "RUN apt-get update \\
	&& apt-get dist-upgrade -y \\
	&& apt-get install -y software-properties-common language-pack-en-base \\
	&& LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/${ppa} \\
	&& apt-get update \\
	&& apt-get install -y ${package} \\
	&& apt-get clean \\
	&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n" >> ${file}
	printf "# Prepare run directory\nRUN mkdir /run/php\n\nWORKDIR /var/www/html\n\n" >> ${file}
	printf "COPY php-fpm.conf ${config}\n\nCMD [\"${binary}\"]\n" >> ${file}

	cp php-fpm.conf ${version}/

	docker build -f ${file} --tag "twentyfifth/php:${version}" ${version}
done
