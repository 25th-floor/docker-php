#!/bin/bash
set -e

versions=( "$@" )
if [ ${#versions[@]} -eq 0 ]; then
	versions=( */ )
fi
versions=( "${versions[@]%/}" )

ppas=(
	[54]='php5-oldstable'
	[55]='php5'
	[56]='php5-5.6'
	[70]='php-7.0'
)

# Building php-fpm images
for version in "${versions[@]}"; do
	versionShort=`echo $version | tr -d '.'`
	majorVersion=`echo $version | sed 's/^\([[:digit:]]*\).*$/\1/'`

	directory="${version}/fpm"
	file="${directory}/Dockerfile"

	echo "Generating ${file}"

	ppa=${ppas[$versionShort]}
	package="php${majorVersion}-fpm"
	binary="php${majorVersion}-fpm"
	config="/etc/php${majorVersion}/fpm/php-fpm.conf"
	extensions="php5-sqlite php5-pgsql php5-mysqlnd php5-mcrypt php5-intl php5-gd php5-curl"

	if [[ ${majorVersion} == "7" ]]; then
		package="php7.0-fpm"
		binary="php-fpm7.0"
		config='/etc/php/7.0/fpm/php-fpm.conf'
		extensions="php7.0-sqlite php7.0-pgsql php7.0-mysql php7.0-mcrypt php7.0-intl php7.0-gd php7.0-curl"
	fi

	printf "# Beware: This file is generated by the generate.sh script!\n" > ${file}

	printf "FROM ubuntu:14.04\nMAINTAINER Martin Prebio <mp@25th-floor.com>\nEXPOSE 9000\n" >> ${file}
	printf "ENV DEBIAN_FRONTEND noninteractive\n\n" >> ${file}
	printf "RUN apt-get update \\
	&& apt-get dist-upgrade -y \\
	&& apt-get install -y software-properties-common language-pack-en-base \\
	&& LC_ALL=en_US.UTF-8 add-apt-repository ppa:ondrej/${ppa} \\
	&& apt-get update \\
	&& apt-get install -y ${package} ${extensions} \\
	&& apt-get clean \\
	&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n" >> ${file}
	printf "# Prepare run directory\nRUN mkdir /run/php\n\nWORKDIR /var/www\n\n" >> ${file}
	printf "COPY php-fpm.conf ${config}\n\nCMD [\"${binary}\"]\n" >> ${file}

	cp php-fpm.conf ${directory}

	docker build -f ${file} --tag "twentyfifth/php-fpm:${version}" ${directory}/
done

# Building php-nginx images
for version in "${versions[@]}"; do
	majorVersion=`echo $version | sed 's/^\([[:digit:]]*\).*$/\1/'`

	directory="${version}/nginx"
	file="${directory}/Dockerfile"
	supervisor="${directory}/supervisord.conf"

	echo "Generating ${file}"

	binary="php${majorVersion}-fpm"
	if [[ ${majorVersion} == "7" ]]; then
		binary="php-fpm7.0"
	fi

	printf "# Beware: This file is generated by the generate.sh script!\n" > ${file}
	printf "FROM twentyfifth/php-fpm:${version}\nMAINTAINER Martin Prebio <mp@25th-floor.com>\nEXPOSE 80\n\n" >> ${file}
	printf "RUN apt-get update \\
	&& apt-get install -y supervisor nginx \\
	&& apt-get clean \\
	&& rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*\n\n" >> ${file}
	printf "RUN ln -sf /dev/stdout /var/log/nginx/access.log \\
	&& ln -sf /dev/stderr /var/log/nginx/error.log\n\n" >> ${file}
	printf "COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf\n" >> ${file}
	printf "COPY nginx-site.conf /etc/nginx/sites-enabled/default\n\n" >> ${file}
	printf "CMD [\"/usr/bin/supervisord\", \"-c\", \"/etc/supervisor/supervisord.conf\"]" >> ${file}

	printf "[supervisord]\nnodaemon=true\nloglevel=debug\n\n" > ${supervisor}
	printf "[program:php-fpm]\ncommand=${binary}\n\n" >> ${supervisor}
	printf "[program:nginx]\ncommand=nginx -g \"daemon off;\"\n\n" >> ${supervisor}

	cp nginx-site.conf ${directory}

	docker build -f ${file} --tag "twentyfifth/php-nginx:${version}" ${directory}/
done
